const credit = `
<small>Generated by <a href="https://github.com/erdemozveren/i18n-audit" target="_blank" style="text-decoration:none; color:#0366d6;">
 <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" style="vertical-align: middle;">
    <path d="M8 0C3.58 0 0 3.58 0 8a8 8 0 0 0 5.47 7.59c.4.07.55-.17.55-.38 
    0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52
    -.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.5-1.07-1.78-.2-3.64
    -.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82a7.6 7.6
    0 0 1 2-.27c.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56
    .82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 
    2.2 0 .21.15.46.55.38A8.01 8.01 0 0 0 16 8c0-4.42-3.58-8-8-8z"/>
  </svg>
i18n-audit</a></small>
`;
const auditInfo = `
<ul>
<li><div class="marker undefined"></div><span class="marker-tag">UNDEFINED</span> Key <strong>used in source</strong> but <strong>no translation</strong> available.</li>
<li><div class="marker variable"></div><span class="marker-tag">VARIABLE</span> Raw JS variable name, needs <strong>manual check</strong>.</li>
<li><div class="marker dynamic"></div><span class="marker-tag">DYNAMIC</span> Key <strong>concatenated / interpolated</strong> in JS, needs <strong>manual check</strong>.</li>
<li><div class="marker unused"></div><span class="marker-tag">UNUSED</span> Key has translation but <strong>not found</strong> in source.</li>
</ul>
<p><small><strong>Note:</strong> The <strong>Similar</strong> column shows keys with similar usage in the source and vica versa for dynamics. This can be helpful for identifying dynamic keys, which may otherwise be marked as unused.</small></p>
`
export function toHTML(rows, headers) {
  if (!rows.length) return '<p>No data</p>';
  const isAudit = headers.length === 5
  const title = 'i18n ' + (isAudit ? 'Audit Report' : 'Translations');
  const head = headers.map(h => `<th>${h}</th>`).join('');
  const body = rows.map(r =>
    '<tr>' + headers.map(h => `<td ${h === 'status' ? 'class="status ' + r[h].toLowerCase() + '"' : ''}>${typeof r[h] !== 'undefined' ? r[h] : ''}</td>`).join('') + '</tr > '
  ).join('\n');

  return `
  <!DOCTYPE html>
  <html>
  <head>
    <meta charset="utf-8">
    <title>${title}</title>
    <style>
      /* Layout */
      body { font-family: sans-serif; margin: 20px; }
      h1 { color: #333; }
      table {
        border-collapse: collapse;
        width: 100%;
        margin-top: 10px;
      }
      th, td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
      }
      th {
        background-color: #f4f4f4;
        color: #333;
      }
      tr:nth-child(even) {
        background-color: #fafafa;
      }
      tr:hover {
        background-color: #f1f1f1;
      }
      .status {
        font-size: 0.7em;
      }
      .unused {
        background-color: #C0C0C0; /* Pastel Gray */
        color: #333333; /* Darker text for contrast */
      }

      .undefined {
        background-color: #FFD580; /* Soft Pastel Orange */
        color: #5A3E00; /* Dark brownish text */
      }

      .variable {
        background-color: #A9D1FF; /* Light Pastel Blue */
        color: #003366; /* Dark blue text */
      }

      .dynamic {
        background-color: #CBB4E8; /* Soft Pastel Purple */
        color: #4B2C70; /* Dark purple text */
      }
      /* Mobile responsiveness */
      @media (max-width: 600px) {
        table, thead, tbody, th, td, tr { display: block; }
        th { position: sticky; top: 0; background: #f4f4f4; }
        td {
          border: none;
          position: relative;
          padding-left: 50%;
        }
        td::before {
          content: attr(data-label);
          position: absolute;
          left: 0;
          width: 45%;
          padding-left: 8px;
          font-weight: bold;
          background: #f4f4f4;
        }
      }
      /* Status description stlyes */
      ul {
        list-style: none;
        padding-left: 0;
      }
      ul li {
        margin-bottom: 0.5em;
        color: #000; /* normal text color */
      }
      .marker {
        display:inline-block;
        width: 10px;
        height: 10px;
        border-radius: 30%;
        margin-right: 0.6em;
        flex-shrink: 0;
      }
      .marker-tag {
      font-size:0.8em;
      font-weight:bold;
      border-right:1px solid #222;
      padding-right:10px;
margin-right:5px;
      }
    </style>
  </head>
  <body>
    <h1>${title}</h1>
${credit}
${isAudit ? auditInfo : ''}
    <table>
      <thead><tr>${head}</tr></thead>
      <tbody>
      ${body}
      </tbody>
    </table>
<p><small>Total of <strong>${rows.length}</strong> rows</small></p>
  </body>
  </html>`;
}
